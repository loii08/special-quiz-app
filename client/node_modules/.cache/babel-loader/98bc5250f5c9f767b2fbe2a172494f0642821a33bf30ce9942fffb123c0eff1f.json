{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chanl\\\\Documents\\\\Kenneth\\\\html\\\\client\\\\src\\\\pages\\\\CreateQuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CreateQuizPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateQuizPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [scoreGoal, setScoreGoal] = useState(1);\n  const [anniversaryDate, setAnniversaryDate] = useState('');\n  const [congratulationsMessage, setCongratulationsMessage] = useState('');\n  const [questions, setQuestions] = useState([{\n    question: '',\n    answer: ''\n  }]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n\n  // Refs for auto-focusing on the first error field\n  const titleRef = useRef(null);\n  const scoreGoalRef = useRef(null);\n  const anniversaryDateRef = useRef(null);\n  const handleQuestionChange = (index, event) => {\n    const newQuestions = [...questions];\n    newQuestions[index][event.target.name] = event.target.value;\n    setQuestions(newQuestions);\n  };\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      question: '',\n      answer: ''\n    }]);\n  };\n  const removeQuestion = index => {\n    // Prevent removing questions if it would go below the score goal\n    if (questions.length <= scoreGoal) {\n      setFormErrors(prevErrors => ({\n        ...prevErrors,\n        questions: `You cannot have fewer than ${scoreGoal} questions.`\n      }));\n      // Clear the error message after a few seconds\n      setTimeout(() => setFormErrors(prev => ({\n        ...prev,\n        questions: undefined\n      })), 3000);\n      return;\n    }\n    const newQuestions = questions.filter((_, i) => i !== index);\n    setQuestions(newQuestions);\n  };\n  const handleScoreGoalBlur = () => {\n    const currentQuestionCount = questions.length;\n    const goal = Number(scoreGoal) || 0;\n    if (goal > currentQuestionCount) {\n      const diff = goal - currentQuestionCount;\n      const newQuestions = [];\n      for (let i = 0; i < diff; i++) {\n        newQuestions.push({\n          question: '',\n          answer: ''\n        });\n      }\n      setQuestions(prevQuestions => [...prevQuestions, ...newQuestions]);\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!title.trim()) newErrors.title = 'Quiz title is required.';\n    if (!scoreGoal || scoreGoal < 1) newErrors.scoreGoal = 'Score to win must be at least 1.';\n    if (!anniversaryDate) newErrors.anniversaryDate = 'A special date is required.';\n    const validQuestions = questions.filter(q => q.question.trim() && q.answer.trim());\n    if (validQuestions.length < 1) {\n      newErrors.questions = 'You must add at least one complete question.';\n    } else if (validQuestions.length < scoreGoal) {\n      newErrors.questions = `You need at least ${scoreGoal} valid questions to match your score goal.`;\n    }\n    setFormErrors(newErrors);\n    return newErrors; // Return the errors object\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate the form before submitting\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      // Auto-focus on the first field with an error\n      if (validationErrors.title) {\n        titleRef.current.focus();\n      } else if (validationErrors.scoreGoal) {\n        scoreGoalRef.current.focus();\n      } else if (validationErrors.anniversaryDate) {\n        anniversaryDateRef.current.focus();\n      }\n      // If the only error is in questions, we don't focus anything specific\n      return;\n    }\n    setLoading(true);\n    setError('');\n    const quizData = {\n      title,\n      scoreGoal,\n      anniversaryDate,\n      congratulationsMessage,\n      questions: questions.filter(q => q.question && q.answer)\n    };\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/quiz`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(quizData)\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.message || 'Failed to create quiz.');\n      }\n      const {\n        quizId\n      } = await response.json();\n      navigate(`/quiz/${quizId}`);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title\",\n        children: \"Create Your Custom Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: titleRef,\n              id: \"title\",\n              type: \"text\",\n              placeholder: \"e.g., Our Story\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              className: formErrors.title ? 'input-error' : '',\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), formErrors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: formErrors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"scoreGoal\",\n              children: \"Score to Win\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: scoreGoalRef,\n              id: \"scoreGoal\",\n              type: \"number\",\n              value: scoreGoal,\n              onChange: e => setScoreGoal(e.target.value < 1 ? 1 : e.target.value),\n              onBlur: handleScoreGoalBlur,\n              min: \"1\",\n              className: formErrors.scoreGoal ? 'input-error' : '',\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), formErrors.scoreGoal && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: formErrors.scoreGoal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"anniversaryDate\",\n              children: \"Anniversary Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: anniversaryDateRef,\n              id: \"anniversaryDate\",\n              type: \"date\",\n              value: anniversaryDate,\n              onChange: e => setAnniversaryDate(e.target.value),\n              className: formErrors.anniversaryDate ? 'input-error' : '',\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), formErrors.anniversaryDate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: formErrors.anniversaryDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"congratulationsMessage\",\n              children: \"Custom 'Congratulations' Message (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"congratulationsMessage\",\n              placeholder: \"e.g., You're the best!\",\n              value: congratulationsMessage,\n              onChange: e => setCongratulationsMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-section-title\",\n            children: \"Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), formErrors.questions && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message error-message-centered\",\n            children: formErrors.questions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 50\n          }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"question\",\n                type: \"text\",\n                placeholder: \"Enter your question\",\n                value: q.question,\n                onChange: e => handleQuestionChange(index, e),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"answer\",\n                type: \"text\",\n                placeholder: \"Enter the answer\",\n                value: q.answer,\n                onChange: e => handleQuestionChange(index, e),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeQuestion(index),\n              className: \"remove-question-btn\",\n              \"aria-label\": \"Remove question\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"3 6 5 6 21 6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 215\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 258\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"10\",\n                  y1: \"11\",\n                  x2: \"10\",\n                  y2: \"17\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 354\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"14\",\n                  y1: \"11\",\n                  x2: \"14\",\n                  y2: \"17\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 399\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addQuestion,\n            className: \"secondary-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"3\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"12\",\n                y1: \"5\",\n                x2: \"12\",\n                y2: \"19\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 207\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"5\",\n                y1: \"12\",\n                x2: \"19\",\n                y2: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 251\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), \"Add Another Question\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"interactive-button\",\n          children: loading ? 'Creating...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"18\",\n              height: \"18\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.72\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 209\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.72-1.72\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 286\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 31\n            }, this), \"Create & Get Link\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            textAlign: 'center'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateQuizPage, \"vouMPDb5fqVHncKoS41NTbo1eBc=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateQuizPage;\nexport default CreateQuizPage;\nvar _c;\n$RefreshReg$(_c, \"CreateQuizPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateQuizPage","_s","navigate","title","setTitle","scoreGoal","setScoreGoal","anniversaryDate","setAnniversaryDate","congratulationsMessage","setCongratulationsMessage","questions","setQuestions","question","answer","error","setError","loading","setLoading","formErrors","setFormErrors","titleRef","scoreGoalRef","anniversaryDateRef","handleQuestionChange","index","event","newQuestions","target","name","value","addQuestion","removeQuestion","length","prevErrors","setTimeout","prev","undefined","filter","_","i","handleScoreGoalBlur","currentQuestionCount","goal","Number","diff","push","prevQuestions","validateForm","newErrors","trim","validQuestions","q","handleSubmit","e","preventDefault","validationErrors","Object","keys","current","focus","quizData","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","errData","json","Error","message","quizId","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","htmlFor","ref","id","type","placeholder","onChange","required","onBlur","min","map","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","x1","y1","x2","y2","disabled","style","color","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/chanl/Documents/Kenneth/html/client/src/pages/CreateQuizPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CreateQuizPage.css';\r\n\r\nconst CreateQuizPage = () => {\r\n    const navigate = useNavigate();\r\n    const [title, setTitle] = useState('');\r\n    const [scoreGoal, setScoreGoal] = useState(1);\r\n    const [anniversaryDate, setAnniversaryDate] = useState('');\r\n    const [congratulationsMessage, setCongratulationsMessage] = useState('');\r\n    const [questions, setQuestions] = useState([{ question: '', answer: '' }]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [formErrors, setFormErrors] = useState({});\r\n\r\n    // Refs for auto-focusing on the first error field\r\n    const titleRef = useRef(null);\r\n    const scoreGoalRef = useRef(null);\r\n    const anniversaryDateRef = useRef(null);\r\n\r\n    const handleQuestionChange = (index, event) => {\r\n        const newQuestions = [...questions];\r\n        newQuestions[index][event.target.name] = event.target.value;\r\n        setQuestions(newQuestions);\r\n    };\r\n\r\n    const addQuestion = () => {\r\n        setQuestions([...questions, { question: '', answer: '' }]);\r\n    };\r\n\r\n    const removeQuestion = (index) => {\r\n        // Prevent removing questions if it would go below the score goal\r\n        if (questions.length <= scoreGoal) {\r\n            setFormErrors(prevErrors => ({\r\n                ...prevErrors,\r\n                questions: `You cannot have fewer than ${scoreGoal} questions.`\r\n            }));\r\n            // Clear the error message after a few seconds\r\n            setTimeout(() => setFormErrors(prev => ({ ...prev, questions: undefined })), 3000);\r\n            return;\r\n        }\r\n        const newQuestions = questions.filter((_, i) => i !== index);\r\n        setQuestions(newQuestions);\r\n    };\r\n\r\n    const handleScoreGoalBlur = () => {\r\n        const currentQuestionCount = questions.length;\r\n        const goal = Number(scoreGoal) || 0;\r\n\r\n        if (goal > currentQuestionCount) {\r\n            const diff = goal - currentQuestionCount;\r\n            const newQuestions = [];\r\n            for (let i = 0; i < diff; i++) {\r\n                newQuestions.push({ question: '', answer: '' });\r\n            }\r\n            setQuestions(prevQuestions => [...prevQuestions, ...newQuestions]);\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        if (!title.trim()) newErrors.title = 'Quiz title is required.';\r\n        if (!scoreGoal || scoreGoal < 1) newErrors.scoreGoal = 'Score to win must be at least 1.';\r\n        if (!anniversaryDate) newErrors.anniversaryDate = 'A special date is required.';\r\n\r\n        const validQuestions = questions.filter(q => q.question.trim() && q.answer.trim());\r\n        if (validQuestions.length < 1) {\r\n            newErrors.questions = 'You must add at least one complete question.';\r\n        } else if (validQuestions.length < scoreGoal) {\r\n            newErrors.questions = `You need at least ${scoreGoal} valid questions to match your score goal.`;\r\n        }\r\n\r\n        setFormErrors(newErrors);\r\n        return newErrors; // Return the errors object\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Validate the form before submitting\r\n        const validationErrors = validateForm();\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            // Auto-focus on the first field with an error\r\n            if (validationErrors.title) {\r\n                titleRef.current.focus();\r\n            } else if (validationErrors.scoreGoal) {\r\n                scoreGoalRef.current.focus();\r\n            } else if (validationErrors.anniversaryDate) {\r\n                anniversaryDateRef.current.focus();\r\n            }\r\n            // If the only error is in questions, we don't focus anything specific\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        const quizData = {\r\n            title,\r\n            scoreGoal,\r\n            anniversaryDate,\r\n            congratulationsMessage,\r\n            questions: questions.filter(q => q.question && q.answer),\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/quiz`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(quizData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errData = await response.json();\r\n                throw new Error(errData.message || 'Failed to create quiz.');\r\n            }\r\n\r\n            const { quizId } = await response.json();\r\n            navigate(`/quiz/${quizId}`);\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-wrapper\">\r\n            <div className=\"card\">\r\n                <h1 className=\"form-title\">\r\n                    Create Your Custom Quiz\r\n                </h1>\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <div className=\"form-section\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input ref={titleRef} id=\"title\" type=\"text\" placeholder=\"e.g., Our Story\" value={title} onChange={e => setTitle(e.target.value)} className={formErrors.title ? 'input-error' : ''} required />\r\n                            {formErrors.title && <span className=\"error-message\">{formErrors.title}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"scoreGoal\">Score to Win</label>\r\n                            <input ref={scoreGoalRef} id=\"scoreGoal\" type=\"number\" value={scoreGoal} onChange={e => setScoreGoal(e.target.value < 1 ? 1 : e.target.value)} onBlur={handleScoreGoalBlur} min=\"1\" className={formErrors.scoreGoal ? 'input-error' : ''} required />\r\n                            {formErrors.scoreGoal && <span className=\"error-message\">{formErrors.scoreGoal}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"anniversaryDate\">Anniversary Date</label>\r\n                            <input ref={anniversaryDateRef} id=\"anniversaryDate\" type=\"date\" value={anniversaryDate} onChange={e => setAnniversaryDate(e.target.value)} className={formErrors.anniversaryDate ? 'input-error' : ''} required />\r\n                            {formErrors.anniversaryDate && <span className=\"error-message\">{formErrors.anniversaryDate}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"congratulationsMessage\">Custom 'Congratulations' Message (Optional)</label>\r\n                            <textarea id=\"congratulationsMessage\" placeholder=\"e.g., You're the best!\" value={congratulationsMessage} onChange={e => setCongratulationsMessage(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-section\">\r\n                        <h3 className=\"form-section-title\">Questions</h3>\r\n                        {formErrors.questions && <span className=\"error-message error-message-centered\">{formErrors.questions}</span>}\r\n                        {questions.map((q, index) => (\r\n                            <div key={index} className=\"question-row\">\r\n                                <span className=\"question-number\">{index + 1}</span>\r\n                                <div className=\"question-inputs\">\r\n                                    <input name=\"question\" type=\"text\" placeholder=\"Enter your question\" value={q.question} onChange={e => handleQuestionChange(index, e)} required />\r\n                                    <input name=\"answer\" type=\"text\" placeholder=\"Enter the answer\" value={q.answer} onChange={e => handleQuestionChange(index, e)} required />\r\n                                </div>\r\n                                <button type=\"button\" onClick={() => removeQuestion(index)} className=\"remove-question-btn\" aria-label=\"Remove question\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                        <button type=\"button\" onClick={addQuestion} className=\"secondary-button\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\r\n                            Add Another Question\r\n                        </button>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" disabled={loading} className=\"interactive-button\">\r\n                        {loading ? 'Creating...' : (\r\n                            <><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.72\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.72-1.72\"></path></svg>\r\n                            Create & Get Link</>\r\n                        )}\r\n                    </button>\r\n                    {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateQuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}