{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chanl\\\\Documents\\\\Kenneth\\\\html\\\\client\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [colorMode, setColorMode] = useState('dark');\n  const [specialTheme, setSpecialTheme] = useState(null);\n  useEffect(() => {\n    // A special theme takes precedence over the light/dark mode\n    if (specialTheme) {\n      document.body.className = specialTheme;\n    } else {\n      document.body.className = colorMode === 'light' ? 'light-mode' : '';\n    }\n  }, [colorMode, specialTheme]);\n  const toggleColorMode = () => {\n    setColorMode(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const value = {\n    colorMode,\n    toggleColorMode,\n    specialTheme,\n    setSpecialTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n_s2(ThemeProvider, \"yQ0ejCewbkZCIrFqMFOdHE1rSe0=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","colorMode","setColorMode","specialTheme","setSpecialTheme","document","body","className","toggleColorMode","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chanl/Documents/Kenneth/html/client/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n    const [colorMode, setColorMode] = useState('dark');\r\n    const [specialTheme, setSpecialTheme] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // A special theme takes precedence over the light/dark mode\r\n        if (specialTheme) {\r\n            document.body.className = specialTheme;\r\n        } else {\r\n            document.body.className = colorMode === 'light' ? 'light-mode' : '';\r\n        }\r\n    }, [colorMode, specialTheme]);\r\n\r\n    const toggleColorMode = () => {\r\n        setColorMode(prev => (prev === 'light' ? 'dark' : 'light'));\r\n    };\r\n\r\n    const value = {\r\n        colorMode,\r\n        toggleColorMode,\r\n        specialTheme,\r\n        setSpecialTheme,\r\n    };\r\n\r\n    return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIY,YAAY,EAAE;MACdE,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGJ,YAAY;IAC1C,CAAC,MAAM;MACHE,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGN,SAAS,KAAK,OAAO,GAAG,YAAY,GAAG,EAAE;IACvE;EACJ,CAAC,EAAE,CAACA,SAAS,EAAEE,YAAY,CAAC,CAAC;EAE7B,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC1BN,YAAY,CAACO,IAAI,IAAKA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAC/D,CAAC;EAED,MAAMC,KAAK,GAAG;IACVT,SAAS;IACTO,eAAe;IACfL,YAAY;IACZC;EACJ,CAAC;EAED,oBAAOV,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAX,QAAA,EAAEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAClF,CAAC;AAACf,GAAA,CAzBWF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}