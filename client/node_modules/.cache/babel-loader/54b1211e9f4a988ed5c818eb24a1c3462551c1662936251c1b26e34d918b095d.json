{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{spawn as launchConfetti}from'../utils/canvasConfetti.js';import{createFallingEmojis}from'../utils/domAnimations.js';import'./QuizModal.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QuizModal=_ref=>{let{gameData,onSuccess,onClose}=_ref;const[score,setScore]=useState(0);const[currentQuestion,setCurrentQuestion]=useState(null);const[userAnswer,setUserAnswer]=useState('');const[wrongAnswerCount,setWrongAnswerCount]=useState(0);const[availableQuestions,setAvailableQuestions]=useState([]);const[availableWrongMessages,setAvailableWrongMessages]=useState([]);const[globalWrongMessages,setGlobalWrongMessages]=useState([]);const[availableCancelMessages,setAvailableCancelMessages]=useState([]);const[globalCancelMessages,setGlobalCancelMessages]=useState([]);const[modalState,setModalState]=useState('asking');// asking, correct, wrong, cancelled, won\nconst[resultData,setResultData]=useState({emoji:'',msg:''});const inputRef=useRef(null);const modalContentRef=useRef(null);// Ref for the entire modal content\nconst emojiRef=useRef(null);// Ref for the result emoji element\nconst scoreGoal=(gameData===null||gameData===void 0?void 0:gameData.scoreGoal)||1;useEffect(()=>{if(gameData&&gameData.questions.length>0){if(availableQuestions.length===0){const initialQuestions=[...gameData.questions];setAvailableQuestions(initialQuestions);askNewQuestion(initialQuestions);}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[gameData]);useEffect(()=>{const fetchMessages=async()=>{try{const[wrongRes,cancelRes]=await Promise.all([fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/api/messages/wrong\")),fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/api/messages/cancel\"))]);setGlobalWrongMessages(await wrongRes.json());setGlobalCancelMessages(await cancelRes.json());}catch(error){console.error(\"Failed to fetch global messages:\",error);}};fetchMessages();},[]);useEffect(()=>{if(modalState==='asking'&&inputRef.current){setTimeout(()=>{inputRef.current.focus();},100);}},[modalState]);const handleAnswerSubmit=()=>{if(!userAnswer.trim()||!currentQuestion)return;if(userAnswer.trim().toLowerCase()===currentQuestion.answer.toLowerCase()){const newScore=score+1;setScore(newScore);const newQuestionsPool=availableQuestions.filter(q=>q._id!==currentQuestion._id);// Use _id from MongoDB\nsetAvailableQuestions(newQuestionsPool);setUserAnswer('');if(newScore>=scoreGoal){setResultData({emoji:'ðŸŽ‰',msg:gameData.congratulationsMessage||\"Congratulations! You did it! ðŸŽ‰\"});setModalState('won');setTimeout(()=>triggerBurst(200),50);}else{setResultData({emoji:'âœ…',msg:\"Correct! Only \".concat(scoreGoal-newScore,\" more to go!\")});triggerBurst(80);setModalState('correct');if(newQuestionsPool.length>0){askNewQuestion(newQuestionsPool);}}}else{setWrongAnswerCount(prevCount=>prevCount+1);let messagePool=availableWrongMessages.length>0?[...availableWrongMessages]:[...globalWrongMessages];if(messagePool.length===0){messagePool=globalWrongMessages.length>0?[...globalWrongMessages]:[{msg:\"That's not quite right. Try again!\",emoji:\"ðŸ¤”\"}];}const randomMsgIndex=Math.floor(Math.random()*messagePool.length);const randomMsg=messagePool[randomMsgIndex];setAvailableWrongMessages(messagePool.filter((_,index)=>index!==randomMsgIndex));setResultData(randomMsg);setModalState('wrong');}};const handleNextQuestion=()=>{setUserAnswer('');setModalState('asking');};const handleTryAgain=()=>{askNewQuestion(availableQuestions);setUserAnswer('');setModalState('asking');};const askNewQuestion=questionsPool=>{if(questionsPool.length>0){const questionIndex=Math.floor(Math.random()*questionsPool.length);setCurrentQuestion(questionsPool[questionIndex]);}};const handleCancel=()=>{let messagePool=availableCancelMessages.length>0?[...availableCancelMessages]:[...globalCancelMessages];if(messagePool.length===0){messagePool=globalCancelMessages.length>0?[...globalCancelMessages]:[{msg:\"Quitting so soon?\",emoji:\"ðŸ˜œ\"}];}const randomMsgIndex=Math.floor(Math.random()*messagePool.length);const randomMsg=messagePool[randomMsgIndex];setAvailableCancelMessages(messagePool.filter((_,index)=>index!==randomMsgIndex));createFallingEmojis(12);setResultData(randomMsg);setModalState('cancelled');};const triggerBurst=count=>{if(modalContentRef.current){const rect=modalContentRef.current.getBoundingClientRect();launchConfetti(rect.left+rect.width/2,rect.top+rect.height/2,count);}};const handleIconClose=()=>{if(modalState==='wrong'||wrongAnswerCount>0){handleCancel();}else{onClose();}};const renderContent=()=>{switch(modalState){case'correct':case'wrong':case'cancelled':case'won':return/*#__PURE__*/_jsxs(\"div\",{className:\"result-modal-content\",children:[/*#__PURE__*/_jsx(\"span\",{ref:emojiRef,className:\"result-emoji\",role:\"img\",\"aria-label\":\"Result emoji\",children:resultData.emoji}),/*#__PURE__*/_jsx(\"p\",{children:resultData.msg}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[modalState==='correct'&&/*#__PURE__*/_jsx(\"button\",{onClick:handleNextQuestion,children:\"Next Question\"}),modalState==='wrong'&&/*#__PURE__*/_jsx(\"button\",{onClick:handleTryAgain,children:\"Try Again\"}),modalState==='cancelled'&&/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:onClose,children:\"Okay\"}),modalState==='won'&&/*#__PURE__*/_jsx(\"button\",{onClick:onSuccess,children:\"Okay\"})]})]});case'asking':default:return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.question}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-score\",children:[\"Score: \",score,\" / \",scoreGoal]}),/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"text\",value:userAnswer,onChange:e=>setUserAnswer(e.target.value),onKeyUp:e=>e.key==='Enter'&&handleAnswerSubmit(),placeholder:\"Your answer...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-buttons\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleAnswerSubmit,children:\"Submit\"})})]});}};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{ref:modalContentRef,className:\"modal-content\",children:[modalState!=='correct'&&modalState!=='cancelled'&&modalState!=='won'&&/*#__PURE__*/_jsx(\"button\",{className:\"modal-close-icon\",onClick:handleIconClose,\"aria-label\":\"Close modal\",children:\"\\xD7\"}),renderContent()]})});};export default QuizModal;","map":{"version":3,"names":["React","useState","useEffect","useRef","spawn","launchConfetti","createFallingEmojis","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuizModal","_ref","gameData","onSuccess","onClose","score","setScore","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","wrongAnswerCount","setWrongAnswerCount","availableQuestions","setAvailableQuestions","availableWrongMessages","setAvailableWrongMessages","globalWrongMessages","setGlobalWrongMessages","availableCancelMessages","setAvailableCancelMessages","globalCancelMessages","setGlobalCancelMessages","modalState","setModalState","resultData","setResultData","emoji","msg","inputRef","modalContentRef","emojiRef","scoreGoal","questions","length","initialQuestions","askNewQuestion","fetchMessages","wrongRes","cancelRes","Promise","all","fetch","concat","process","env","REACT_APP_API_URL","json","error","console","current","setTimeout","focus","handleAnswerSubmit","trim","toLowerCase","answer","newScore","newQuestionsPool","filter","q","_id","congratulationsMessage","triggerBurst","prevCount","messagePool","randomMsgIndex","Math","floor","random","randomMsg","_","index","handleNextQuestion","handleTryAgain","questionsPool","questionIndex","handleCancel","count","rect","getBoundingClientRect","left","width","top","height","handleIconClose","renderContent","className","children","ref","role","onClick","question","type","value","onChange","e","target","onKeyUp","key","placeholder"],"sources":["C:/Users/chanl/Documents/Kenneth/html/client/src/components/QuizModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { spawn as launchConfetti } from '../utils/canvasConfetti.js';\r\nimport { createFallingEmojis } from '../utils/domAnimations.js';\r\n\r\nimport './QuizModal.css';\r\nconst QuizModal = ({ gameData, onSuccess, onClose }) => {\r\n    const [score, setScore] = useState(0);\r\n    const [currentQuestion, setCurrentQuestion] = useState(null);\r\n    const [userAnswer, setUserAnswer] = useState('');\r\n    const [wrongAnswerCount, setWrongAnswerCount] = useState(0);\r\n    const [availableQuestions, setAvailableQuestions] = useState([]);\r\n    const [availableWrongMessages, setAvailableWrongMessages] = useState([]);\r\n    const [globalWrongMessages, setGlobalWrongMessages] = useState([]);\r\n    const [availableCancelMessages, setAvailableCancelMessages] = useState([]);\r\n    const [globalCancelMessages, setGlobalCancelMessages] = useState([]);\r\n    const [modalState, setModalState] = useState('asking'); // asking, correct, wrong, cancelled, won\r\n    const [resultData, setResultData] = useState({ emoji: '', msg: '' });\r\n    const inputRef = useRef(null);\r\n    const modalContentRef = useRef(null); // Ref for the entire modal content\r\n    const emojiRef = useRef(null); // Ref for the result emoji element\r\n\r\n    const scoreGoal = gameData?.scoreGoal || 1;\r\n\r\n    useEffect(() => {\r\n        if (gameData && gameData.questions.length > 0) {\r\n            if (availableQuestions.length === 0) {\r\n                const initialQuestions = [...gameData.questions];\r\n                setAvailableQuestions(initialQuestions);\r\n                askNewQuestion(initialQuestions);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [gameData]);\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const [wrongRes, cancelRes] = await Promise.all([\r\n                    fetch(`${process.env.REACT_APP_API_URL}/api/messages/wrong`),\r\n                    fetch(`${process.env.REACT_APP_API_URL}/api/messages/cancel`)\r\n                ]);\r\n                setGlobalWrongMessages(await wrongRes.json());\r\n                setGlobalCancelMessages(await cancelRes.json());\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch global messages:\", error);\r\n            }\r\n        };\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (modalState === 'asking' && inputRef.current) {\r\n            setTimeout(() => {\r\n                inputRef.current.focus();\r\n            }, 100);\r\n        }\r\n    }, [modalState]);\r\n\r\n    const handleAnswerSubmit = () => {\r\n        if (!userAnswer.trim() || !currentQuestion) return;\r\n\r\n        if (userAnswer.trim().toLowerCase() === currentQuestion.answer.toLowerCase()) {\r\n            const newScore = score + 1;\r\n            setScore(newScore);\r\n            \r\n            const newQuestionsPool = availableQuestions.filter(q => q._id !== currentQuestion._id); // Use _id from MongoDB\r\n            setAvailableQuestions(newQuestionsPool);\r\n            setUserAnswer('');\r\n\r\n            if (newScore >= scoreGoal) {\r\n                setResultData({ emoji: 'ðŸŽ‰', msg: gameData.congratulationsMessage || \"Congratulations! You did it! ðŸŽ‰\" });\r\n                setModalState('won');\r\n                setTimeout(() => triggerBurst(200), 50);\r\n            } else {\r\n                setResultData({ emoji: 'âœ…', msg: `Correct! Only ${scoreGoal - newScore} more to go!` });\r\n                triggerBurst(80);\r\n                setModalState('correct');\r\n                if (newQuestionsPool.length > 0) {\r\n                    askNewQuestion(newQuestionsPool);\r\n                }\r\n            }\r\n        } else {\r\n            setWrongAnswerCount(prevCount => prevCount + 1);\r\n\r\n            let messagePool = availableWrongMessages.length > 0 ? [...availableWrongMessages] : [...globalWrongMessages];\r\n\r\n            if (messagePool.length === 0) {\r\n                messagePool = globalWrongMessages.length > 0 ? [...globalWrongMessages] : [{ msg: \"That's not quite right. Try again!\", emoji: \"ðŸ¤”\" }];\r\n            }\r\n\r\n            const randomMsgIndex = Math.floor(Math.random() * messagePool.length);\r\n            const randomMsg = messagePool[randomMsgIndex];\r\n            setAvailableWrongMessages(messagePool.filter((_, index) => index !== randomMsgIndex));\r\n            setResultData(randomMsg);\r\n            setModalState('wrong');\r\n        }\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        setUserAnswer('');\r\n        setModalState('asking');\r\n    };\r\n\r\n    const handleTryAgain = () => {\r\n        askNewQuestion(availableQuestions);\r\n        setUserAnswer('');\r\n        setModalState('asking');\r\n    };\r\n\r\n    const askNewQuestion = (questionsPool) => {\r\n        if (questionsPool.length > 0) {\r\n            const questionIndex = Math.floor(Math.random() * questionsPool.length); \r\n            setCurrentQuestion(questionsPool[questionIndex]);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        let messagePool = availableCancelMessages.length > 0 ? [...availableCancelMessages] : [...globalCancelMessages];\r\n\r\n        if (messagePool.length === 0) {\r\n            messagePool = globalCancelMessages.length > 0 ? [...globalCancelMessages] : [{ msg: \"Quitting so soon?\", emoji: \"ðŸ˜œ\" }];\r\n        }\r\n\r\n        const randomMsgIndex = Math.floor(Math.random() * messagePool.length);\r\n        const randomMsg = messagePool[randomMsgIndex];\r\n        setAvailableCancelMessages(messagePool.filter((_, index) => index !== randomMsgIndex));\r\n\r\n        createFallingEmojis(12);\r\n        setResultData(randomMsg);\r\n        setModalState('cancelled');\r\n    };\r\n\r\n    const triggerBurst = (count) => {\r\n        if (modalContentRef.current) {\r\n            const rect = modalContentRef.current.getBoundingClientRect();\r\n            launchConfetti(rect.left + rect.width / 2, rect.top + rect.height / 2, count);\r\n        }\r\n    };\r\n\r\n    const handleIconClose = () => {\r\n        if (modalState === 'wrong' || wrongAnswerCount > 0) {\r\n            handleCancel();\r\n        } else {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const renderContent = () => {\r\n        switch (modalState) {\r\n            case 'correct':\r\n            case 'wrong':\r\n            case 'cancelled':\r\n            case 'won':\r\n                return (\r\n                    <div className=\"result-modal-content\">\r\n                        <span ref={emojiRef} className=\"result-emoji\" role=\"img\" aria-label=\"Result emoji\">{resultData.emoji}</span>\r\n                        <p>{resultData.msg}</p>\r\n                        <div className=\"modal-buttons\">\r\n                            {modalState === 'correct' && <button onClick={handleNextQuestion}>Next Question</button>}\r\n                            {modalState === 'wrong' && <button onClick={handleTryAgain}>Try Again</button>} \r\n                            {modalState === 'cancelled' && <button className=\"close-btn\" onClick={onClose}>Okay</button>}\r\n                            {modalState === 'won' && <button onClick={onSuccess}>Okay</button>}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'asking':\r\n            default:\r\n                return (\r\n                    <>\r\n                        <h3>{currentQuestion?.question}</h3>\r\n                        <div className=\"modal-score\">Score: {score} / {scoreGoal}</div>\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            value={userAnswer}\r\n                            onChange={(e) => setUserAnswer(e.target.value)}\r\n                            onKeyUp={(e) => e.key === 'Enter' && handleAnswerSubmit()}\r\n                            placeholder=\"Your answer...\"\r\n                        />\r\n                        <div className=\"modal-buttons\">\r\n                            <button onClick={handleAnswerSubmit}>Submit</button>\r\n                        </div>\r\n                    </>\r\n                );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div ref={modalContentRef} className=\"modal-content\">\r\n                {modalState !== 'correct' && modalState !== 'cancelled' && modalState !== 'won' && (\r\n                    <button className=\"modal-close-icon\" onClick={handleIconClose} aria-label=\"Close modal\">\r\n                        &times;\r\n                    </button>\r\n                )}\r\n                {renderContent()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}